- registrar_tools = RegistrarTools.new(vessel)
.modal.fade{id: 'take-action', role: "dialog", tabindex: "-1"}
  .modal-dialog.modal-md
    .modal-content
      .modal-header
        %button.close{"aria-label" => "Close", "data-dismiss" => "modal", :type => "button"}
          %span{"aria-hidden" => "true"} Ã—
        %h4.modal-title Take Action
      .modal-body
        %p= link_to "Print Certificate of Registry",
            vessel_registration_certificate_path(vessel, format: :pdf),
            target: "_blank",
            class: "btn btn-block btn-success #{'disabled' unless vessel.prints_registration_certificate?}"

        %p= link_to "Print Current Transcript",
            vessel_current_transcript_path(vessel, format: :pdf),
            target: "_blank",
            class: "btn btn-block btn-primary #{'disabled' unless vessel.prints_transcript?}"

        %p= link_to "Print Historic Transcript",
            vessel_historic_transcript_path(vessel, format: :pdf),
            target: "_blank",
            class: "btn btn-block btn-info #{'disabled' unless vessel.prints_transcript?}"

        - if Policies::Workflow.can_edit_official_number?(current_user)
          %p= link_to "Edit Official Number (System Manager only)", "#",
                data: { target: "#edit-official-no", toggle: "modal" },
                class: "btn btn-block btn-danger"
          = render partial: "vessels/modals/edit_official_no", locals: {vessel: vessel}

        - if Policies::Workflow.can_edit_registration_dates?(current_user, vessel)
          %p= link_to "Edit Registration Dates (System Manager only)", "#",
                data: { target: "#edit-registration-dates", toggle: "modal" },
                class: "btn btn-block btn-danger"
          = render partial: "vessels/modals/edit_registration_dates", locals: {vessel: vessel}

        %hr
        - if vessel.registration_status != :frozen
          %p= link_to "Freeze Record", "#",
              data: { target: "#freeze-record", toggle: "modal" },
              class: "btn btn-block btn-danger"
          = render partial: "vessels/modals/freeze_record", locals: {vessel: vessel}
          %hr
          - if vessel.registration_status != :closed

            - if registrar_closure_service = registrar_tools.service(:registrar_closure)
              %p
                = link_to registrar_closure_service,
                  vessel_tasks_path(vessel, service_id: registrar_closure_service.id, application_type: :registrar_closure),
                  method: :post, class: "btn btn-block btn-warning"

            - if forced_closure_service = registrar_tools.service(:forced_closure)
              %p
                = link_to forced_closure_service,
                  vessel_tasks_path(vessel, service_id: forced_closure_service.id, application_type: :forced_closure),
                  method: :post, class: "btn btn-block btn-danger"
          - else
            - if restore_closed_registration_service = registrar_tools.service(:restore_closed_registration)
              %p
                = link_to restore_closed_registration_service,
                  vessel_tasks_path(vessel, service_id: restore_closed_registration_service.id, application_type: :restore_closed_registration),
                  method: :post, class: "btn btn-block btn-warning"

          - if manual_override_service = registrar_tools.service(:manual_override)
            %p
              = link_to manual_override_service,
                vessel_tasks_path(vessel, service_id: manual_override_service.id, application_type: :manual_override),
                method: :post, class: "btn btn-block btn-success"

        - else
          %p= link_to "Unfreeze Record", "#",
              data: { target: "#unfreeze-record", toggle: "modal" },
              class: "btn btn-block btn-warning"
          = render partial: "vessels/modals/unfreeze_record", locals: {vessel: vessel}
        %hr
        - if vessel.can_issue_section_notice?
          %p= link_to "Issue 30 Day Section Notice", "#",
              data: { target: "#section-notice", toggle: "modal" },
              class: "btn btn-block btn-danger"
        - elsif vessel.can_issue_termination_notice?
          %p= link_to "Cancel Section Notice", vessel_section_notice_path(@vessel), method: :delete, class: "btn btn-block btn-danger"
          %p= link_to "Issue 7 Day Termination Notice",
              vessel_termination_path(vessel),
              method: :post, class: "btn btn-block btn-danger"

/ placing this modal  outside the parent modal so the test
/ finders can locate the `checkbox'
= render partial: "vessels/modals/section_notice", locals: {vessel: vessel}
